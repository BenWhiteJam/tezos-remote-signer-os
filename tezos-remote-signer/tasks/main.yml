---
# tasks file for tezos-remote-signer

# unattended-upgrades would cause the signer in reboot required status,
# which will run into a situation for the signer to reboot from time to time
- name: Purge unattended-upgrades
  apt:
    name: unattended-upgrades
    state: absent
    purge: yes

- name: Setup remote signer hostname
  hostname:
    name: tezos-remote-signer

- name: Setup user and auth
  block:
    - name: Remove the default ubuntu user 'ubuntu'
      user:
        name: ubuntu
        state: absent
        remove: yes
      register: ubuntu_user_result

    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Add tezos user
      user:
        name: tezos
        shell: /bin/bash
        comment: Tezos Remote Signer
        group: wheel

    - name: Set authorized key taken from file
      authorized_key:
        user: tezos
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Generate key pair
      openssh_keypair:
        path: /home/tezos/.ssh/id_rsa
        owner: tezos
      register: tezos_keypair

    - name: Print the pubkey for generated keypair
      debug:
        msg: Remote signer succefully configured with public key {{ tezos_keypair.public_key }}

    - name: Disallow password authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
        state: present
      notify:
        - Restart ssh

    - name: Disallow root SSH access
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
        state: present
      notify:
        - Restart ssh

- name: Install packages for remote signer
  apt:
    name:
      - vim
      - ufw
      - git
      - libev-dev
      - rsync 
      - mercurial
      - darcs
      - bubblewrap
      - libhidapi-dev
      - libgmp-dev
      - m4
      - autossh
      - gunicorn
      - python3-flask
      - python3-rpi.gpio
    state: present
    update_cache: yes

- name: Configure and enable ufw 
  block:
    - name: Configure ufw defaults
      ufw:
        direction: "{{ item.direction }}"
        policy: "{{ item.policy }}"
      with_items:
        - { direction: 'incoming', policy: 'deny' }
        - { direction: 'outgoing', policy: 'allow' }
      notify:
        - Restart ufw

    - name: Allow inbound ssh only
      ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      with_items:
        - { rule: 'limit', port: '{{ ssh_port | default("22") }}', proto: 'tcp' }
      notify:
        - Restart ufw

    - name: Enable ufw logging
      ufw:
        logging: on
      notify:
        - Restart ufw

    - name: Enable ufw
      ufw:
        state: enabled

# Ref: https://github.com/serokell/tezos-packaging#ubuntu-launchpad-ppa-with-tezos--binaries
- name: Install tezos signer
  block:
    - name: Install software-properties-common
      apt:
        name: software-properties-common

    - name: Add tezos repository from PPA and install its signing key
      apt_repository:
        repo: ppa:serokell/tezos

    - name: Install tezos-signer and tezos-client
      apt:
        name:
          - tezos-signer
          - tezos-client
        update_cache: yes

- name: Install and start remote signer services
  block:
    - name: Create tezos-signer-wrapper directory
      file:
        path: /usr/lib/python3/tezos-signer-wrapper
        state: directory
        mode: '0644'

    - name: Copy all remote signer service files from templates
      template:
        src: "{{ item.src }}"
        dest: "/{{ item.path }}"
        mode: preserve
      with_filetree: '../templates'
      when: item.state == 'file'

    - name: Start and enable remote signer services via systemd
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - isp-failover
        - tezos-signer
        - tezos-signer-wrapper
        - tezos-signer-forwarder

- name: Import tezos-ledger configs
  block:
    - name: Create .tezos-client folder
      file:
        path: "/home/tezos/.{{item}}"
        state: directory
        owner: tezos
        group: wheel
        mode: '0755'
      with_items:
        - tezos-client
        - tezos-signer

    - name: Create public_keys file
      copy:
        content: |-
          [ { "name": "{{ ledger_name | default('ledger_tezos') }}",
              "value":
                { "locator": "{{ tezos_ledger_url }}",
                  "key": "{{ tezos_public_key }}" } } ]
        dest: "/home/tezos/.{{item}}/public_keys"
        owner: tezos
        group: wheel
      with_items:
        - tezos-client
        - tezos-signer

    - name: Create public_key_hashs file
      copy:
        content: |-
          [ { "name": "{{ ledger_name | default('ledger_tezos') }}", "value": "{{ tezos_public_key_hash }}" } ]
        dest: "/home/tezos/.{{item}}/public_key_hashs"
        owner: tezos
        group: wheel
      with_items:
        - tezos-client
        - tezos-signer

    - name: Create secret_keys file
      copy:
        content: |-
          [ { "name": "{{ ledger_name | default('ledger_tezos') }}",
              "value": "{{ tezos_ledger_url }}" } ]
        dest: "/home/tezos/.{{item}}/secret_keys"
        owner: tezos
        group: wheel
      with_items:
        - tezos-client
        - tezos-signer
  when: import_tezos_ledger

# Udev rules is copied from above
- name: Reload udev rules so ledger is visible from tezos user
  shell: |
    udevadm trigger
    udevadm control --reload-rules

- name: Reboot the remote-signer if this is first time provision
  reboot:
  when: ubuntu_user_result.changed
